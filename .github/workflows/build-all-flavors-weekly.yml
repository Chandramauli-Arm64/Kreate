name: Build all flavors

on:
  schedule:
    # Gotta wait until contributors.json is updated
    - cron: '0 0 * * 0'  # Every Sunday at 0AM

  # Allow manual trigger
  workflow_dispatch:

  # Run jobs when this workflow is updated
  push:
    branches: [kbuild]
    paths:
      - .github/workflows/build-all-flavors-weekly.yml

# Prevent multiple jobs from running at the same time
concurrency:
  group: 'weekly-deploy'
  cancel-in-progress: false  # Don't cancel any in-progress runs in this group

jobs:
  setup:
    runs-on: ubuntu-latest
    # Set date as a variable
    outputs:
      BUILD_DATE: ${{ steps.date.outputs.date }}

    steps:
      - name: Get date
        id: date
        # Output of "October 2 2024" will be "20241002"
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

  build-cache:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "corretto"

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          # Continue using cache, unless gradle build file(s) or wrapper's property is changed
          key: gradle-dependencies-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-dependencies-

      - name: Cache Gradle build outputs
        uses: actions/cache@v4
        with:
          path: build
          key: gradle-build-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-build-

      - name: Build without APK
        run: |
          ./gradlew assembleUpstreamFull --exclude-task packageUpstreamFull
          ./gradlew assembleImprovisedFull --exclude-task packageImprovisedFull
          ./gradlew assembleUpstreamMinified --exclude-task packageUpstreamMinified
          ./gradlew assembleImprovisedMinified --exclude-task packageImprovisedMinified

  build-upstream-full:
    name: Build upstream flavor (full)
    needs: build-cache
    runs-on: ubuntu-latest
    timeout-minutes: 60       # Prevent Github Action from terminating this workflow on first run

    steps:
      - uses: actions/checkout@v4.2.1

      - name: Setup Java 21
        uses: actions/setup-java@v4.4.0
        with:
          java-version: "21"
          distribution: "corretto"

      - name: Restore Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-dependencies-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-dependencies-

      - name: Restore Gradle build outputs
        uses: actions/cache@v4
        with:
          path: build
          key: gradle-build-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-build-

      - name: Build with Gradle
        run: ./gradlew assembleupstreamFull

      - name: Upload artifacts for signing
        uses: actions/upload-artifact@v4.4.1
        with:
          name: unsigned-full-upstream
          path: |
            composeApp/build/outputs/apk/upstream/full/*.apk

  build-upstream-minified:
    name: Build upstream flavor (minified)
    needs: build-cache
    runs-on: ubuntu-latest
    timeout-minutes: 60       # Prevent Github Action from terminating this workflow on first run

    steps:
      - uses: actions/checkout@v4.2.1

      - name: Setup Java 21
        uses: actions/setup-java@v4.4.0
        with:
          java-version: "21"
          distribution: "corretto"

      - name: Restore Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-dependencies-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-dependencies-

      - name: Restore Gradle build outputs
        uses: actions/cache@v4
        with:
          path: build
          key: gradle-build-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-build-

      - name: Build with Gradle
        run: ./gradlew assembleupstreamMinified

      - name: Upload artifacts for signing
        uses: actions/upload-artifact@v4.4.1
        with:
          name: unsigned-minified-upstream
          path: |
            composeApp/build/outputs/apk/upstream/minified/*.apk

  build-improvised-full:
    name: Build improvised flavor (full)
    needs: build-cache
    runs-on: ubuntu-latest
    timeout-minutes: 60       # Prevent Github Action from terminating this workflow on first run

    steps:
      - uses: actions/checkout@v4.2.1

      - name: Setup Java 21
        uses: actions/setup-java@v4.4.0
        with:
          java-version: "21"
          distribution: "corretto"

      - name: Restore Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-dependencies-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-dependencies-

      - name: Restore Gradle build outputs
        uses: actions/cache@v4
        with:
          path: build
          key: gradle-build-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-build-

      - name: Build with Gradle
        run: ./gradlew assembleimprovisedFull

      - name: Upload artifacts for signing
        uses: actions/upload-artifact@v4.4.1
        with:
          name: unsigned-full-improvised
          path: |
            composeApp/build/outputs/apk/improvised/full/*.apk

  build-improvised-minified:
    name: Build improvised flavor (minified)
    needs: build-cache
    runs-on: ubuntu-latest
    timeout-minutes: 60       # Prevent Github Action from terminating this workflow on first run

    steps:
      - uses: actions/checkout@v4.2.1

      - name: Setup Java 21
        uses: actions/setup-java@v4.4.0
        with:
          java-version: "21"
          distribution: "corretto"

      - name: Restore Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-dependencies-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-dependencies-

      - name: Restore Gradle build outputs
        uses: actions/cache@v4
        with:
          path: build
          key: gradle-build-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-build-

      - name: Build with Gradle
        run: ./gradlew assembleimprovisedMinified

      - name: Upload artifacts for signing
        uses: actions/upload-artifact@v4.4.1
        with:
          name: unsigned-minified-improvised
          path: |
            composeApp/build/outputs/apk/improvised/minified/*.apk

  sign-apks:
    name: Sign all built APKs
    needs:
      - build-upstream-full
      - build-upstream-minified
      - build-improvised-full
      - build-improvised-minified
    runs-on: ubuntu-latest

    steps:
      #
      # UPSTREAM
      #
      - name: Download unsign upstream (full) APKs
        uses: actions/download-artifact@v4.1.8
        with:
          name: unsigned-full-upstream
          path: upstream/unsigned

      - name: Download unsign upstream (minified) APKs
        uses: actions/download-artifact@v4.1.8
        with:
          name: unsigned-minified-upstream
          path: upstream/unsigned

      - name: Sign upstream APKs
        uses: Tlaster/android-sign@v1.2.2
        with:
          releaseDirectory: upstream/unsigned

          signingKeyBase64: "${{ secrets.KEYSTORE }}"
          keyStorePassword: "${{ secrets.KEYSTORE_PASSWD }}"
          alias: "${{ secrets.UPSTREAM_KEY_ALIAS }}"
          keyPassword: "${{ secrets.UPSTREAM_KEY_PASSWD }}"

          output: signed
        env:
          BUILD_TOOLS_VERSION: "34.0.0"

      #
      # IMPROVISED
      #
      - name: Download unsign improvised (full) APKs
        uses: actions/download-artifact@v4.1.8
        with:
          name: unsigned-full-improvised
          path: improvised/unsigned

      - name: Download unsign improvised (minified) APKs
        uses: actions/download-artifact@v4.1.8
        with:
          name: unsigned-minified-improvised
          path: improvised/unsigned

      - name: Sign improvised APKs
        uses: Tlaster/android-sign@v1.2.2
        with:
          releaseDirectory: improvised/unsigned

          signingKeyBase64: "${{ secrets.KEYSTORE }}"
          keyStorePassword: "${{ secrets.KEYSTORE_PASSWD }}"
          alias: "${{ secrets.IMPROVISED_KEY_ALIAS }}"
          keyPassword: "${{ secrets.IMPROVISED_KEY_PASSWD }}"

          output: signed
        env:
          BUILD_TOOLS_VERSION: "34.0.0"

      - name: Remove trails     # remove "-signed"
        run: |
          for filename in signed/*.apk; do mv "$filename" "${filename//-unsigned-signed}"; done

      - name: Upload for release
        uses: actions/upload-artifact@v4.4.1
        with:
          name: signed-apks
          path: signed/*.apk

  upload-to-release:
    needs: [setup, sign-apks]
    runs-on: ubuntu-latest

    steps:
      - name: Download signed upstream full APK
        uses: actions/download-artifact@v4.1.8
        with:
          name: signed-apks

      - name: Upload built APK to release
        uses: softprops/action-gh-release@v2
        with:
          files: RiMusic-*.apk

          name: RiMusic Weekly Build | KBuild | ${{ needs.setup.outputs.BUILD_DATE }}
          tag_name: "weekly-kbuild"
          body: |
            <div align="center">
              <img src="https://raw.githubusercontent.com/knighthat/RiMusic/refs/heads/master/assets/design/latest/app_logo.svg" width="300" height="100" />
              <p><b>RiMusic</b> KBuild</p>
              <p>Custom build by @knighthat</p>
            </div>
            
            ## ❗ WARNING ❗
            
            This build is not an official release, it is just ideas before it's pushed into [upstream branch](https://github.com/fast4x/RiMusic).\
            If you are interested, head down to the download section and get a copy.
            
            ## 📲 Installation
            
            This version is signed by me. Android treats this build as if this is a different app, thus,
            your old RiMusic app will not be removed
            
            ## Verification
            
            > Always check for signature before installing any app you downloaded from Github or any other APK distributor.
            
            ### My signature hashes
            
            | Hash algorithm | Variant | Digest |
            |---|---|---|
            | SHA-256 | improvised | 8c1bf1d9f63288f36837aba5ba3dbef929d0e78055d3cd6d9ec8d26ae487f56e |
            | SHA-1 | improvised | 2dae81c56e516193f433c04b5b8b2f79c39ecec2 |
            | MD5 | improvised | b8ac8c9d91e7c6972d966e0e167e0e71 |
            | SHA-256 | upstream | 899d2f3924b1f563f898853cc1767f261de4124b106040c6d934bc2dd503d4e0 |
            | SHA-1 | upstream | 363e4cdf85e6089047b0a97f236dfe5875e12719 |
            | MD5 | upstream | 6f8f59849089efc9e55b05448f1b8380 |
            
            ## FAQ
            
            <details> 
            <summary>Q1: How do I download your build?</summary>
              <blockquote>
                Right below this article, there are link(s) to prebuilt APK(s).<br>
                Select the one that fits your need to start the download.
              </blockquote>
            </details>
            <details>
            <summary>Q2: How verify build's signature?</summary>
              <blockquote>
                There are 2 main methods:
                <ol>
                  <li>
                    Built-in <a href="https://stackoverflow.com/questions/7104624/how-do-i-verify-that-an-android-apk-is-signed-with-a-release-certificate" target="_blank" rel="noopener noreferrer">jarsigner</a>
                  </li>
                  <li>
                    <a href="https://developer.android.com/tools/apksigner#options-verify" target="_blank" rel="noopener noreferrer">apksigner</a> from AndroidSDK
                  </li>
                </ol>
              </blockquote>
            </details>

          token: ${{ secrets.RELEASE_TOKEN }}
          generate_release_notes: true
