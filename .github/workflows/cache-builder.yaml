name: Automatic Cache Builder


on:
  # These files are dependencies of this project.
  # Therefore, when 1 of them changes, everything needs
  # to be rebuild for up-to-date cache.
  push:
    paths:
      - '**/*.gradle*'
      - '**/gradle-wrapper.properties'

  schedule:
    # Runs every other day at midnight UTC
    - cron: '0 0 */2 * *'

  # Allows manual triggering
  workflow_dispatch:


jobs:
  #
  # Topology:
  # Scan Git's commit logs for any changes in 1 of these locations:
  # - composeApp/androidMain
  # - composeApp/androidImprovised
  # - composeApp/androidUpstream
  # If any changes detect, mark that flavor to build cache later on.
  # Any changes made to "androidMain" will cause both flavor to be rebuilt.
  #
  check-changes:
    name: Check for changes
    runs-on: ubuntu-latest

    outputs:
      rebuild_upstream: ${{ steps.detect-changes.outputs.upstream_changed }}
      rebuild_improvised: ${{ steps.detect-changes.outputs.improvised_changed }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Always have a hard-coded limit of how many commits to fetch.
          # Better idea to fetch the whole thing but fetch time goes BRRRRRR.
          fetch-depth: 300

      #
      # Explanations:
      # git log --since="24 hours ago" --name-only --pretty=format:
      # - Show all files that were changed withing 24 hrs.
      # - Show changed file paths in relative (composeApp/androidMain, etc.)
      #
      # grep -q "^composeApp/androidImprovised/" && echo "true" || echo "false"
      # - Collect all paths starts with "composeApp/androidImprovised/"
      # - Returns "true" if any, otherwise, "false"
      #
      # This step ensures only flavor with changes made will have its cache rebuild.
      #
      # However, rebuild all cache if a file in this group has changed:
      # - Any file inside composeApp/androidMain
      # - Any file inside composeApp/commonMain
      # - Any .gradle, .gradle.kts, or gradle-wrapper.properties
      #
      - name: Detect changes in last 24 hours
        id: detect-changes
        run: |
          FLAVOR_UPSTREAM_CHANGED=$(git log --since="24 hours ago" --name-only --pretty=format: | grep -q "^composeApp/src/androidUpstream/" && echo "true" || echo "false")
          FLAVOR_IMPROVISED_CHANGED=$(git log --since="24 hours ago" --name-only --pretty=format: | grep -q "^composeApp/src/androidImprovised/" && echo "true" || echo "false")
          if \
            git log --since="24 hours ago" --name-only --pretty=format: | grep -q "^composeApp/src/androidMain/" || \
            git log --since="24 hours ago" --name-only --pretty=format: | grep -q "^composeApp/src/commonMain/" || \
            git log --since="24 hours ago" --name-only --pretty=format: | grep -q "^.*\.gradle.*" || \
            git log --since="24 hours ago" --name-only --pretty=format: | grep -q "^gradle-wrapper.properties"; then
          
            FLAVOR_UPSTREAM_CHANGED="true"
            FLAVOR_IMPROVISED_CHANGED="true"
          fi
          
          echo "upstream_changed=$FLAVOR_UPSTREAM_CHANGED" >> $GITHUB_OUTPUT
          echo "improvised_changed=$FLAVOR_IMPROVISED_CHANGED" >> $GITHUB_OUTPUT

  build-upstream:
    needs: check-changes
    if: needs.check-changes.outputs.rebuild_upstream == 'true'

    name: Build upstream
    runs-on: ubuntu-latest
    timeout-minutes: 60       # Prevent Github Action from terminating this workflow on first run

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4.7.0
        with:
          # Do NOT add `cache: 'gradle'` here
          distribution: 'corretto'
          java-version: '21'

      - name: Cache Gradle dependencies & build cache
        uses: actions/cache@v4.2.0
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ./build
            ./composeApp/build
          # Cache key has flavor's name to prevent override each other
          key: gradle-${{ runner.os }}-upstream-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}-upstream-

      - name: Build with Gradle (cache only)
        # Gradle has built-in flag "-build-cache"
        # That explicitly tell compiler to generate reusable files.
        # Combine with "--exclude-task" to skip unnecessary tasks
        run: ./gradlew assembleUpstreamFull --build-cache --exclude-task packageUpstreamFull

  build-improvised:
    needs: check-changes
    if: needs.check-changes.outputs.rebuild_improvised == 'true'

    name: Build upstream
    runs-on: ubuntu-latest
    timeout-minutes: 60       # Prevent Github Action from terminating this workflow on first run

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4.7.0
        with:
          # Do NOT add `cache: 'gradle'` here
          distribution: 'corretto'
          java-version: '21'

      - name: Cache Gradle dependencies & build cache
        uses: actions/cache@v4.2.0
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ./build
            ./composeApp/build
          # Cache key has flavor's name to prevent override each other
          key: gradle-${{ runner.os }}-improvised-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}-improvised-

      - name: Build with Gradle (cache only)
        # Gradle has built-in flag "-build-cache"
        # That explicitly tell compiler to generate reusable files.
        # Combine with "--exclude-task" to skip unnecessary tasks
        run: ./gradlew assembleImprovisedFull --build-cache --exclude-task packageImprovisedFull
