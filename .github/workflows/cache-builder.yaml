name: Automatic Cache Builder


on:
  push:
    # These files are dependencies of this project.
    # Therefore, when 1 of them changes, everything needs
    # to be rebuild for up-to-date cache.
    paths:
      - '**/build.gradle.kts'
      - '**/gradle-wrapper.properties'
      - '**/libs.versions.toml'
    # Don't run on tag creation
    tags-ignore:
      - '**'

  schedule:
    - cron: '0 16 * * 5'   # 4PM every friday

  # Allows manual triggering
  workflow_dispatch:


jobs:
  check-changes:
    name: Check for changes
    runs-on: ubuntu-latest

    outputs:
      changes_made: ${{ steps.detect-changes.outputs.changes_made }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          # Always have a hard-coded limit of how many commits to fetch.
          # Better idea to fetch the whole thing but fetch time goes BRRRRRR.
          fetch-depth: 300
          submodules: true

      #
      # Explanations:
      # - `git log`: shows commit history
      # - `--since="1 week ago"`: Show commit up to last week
      # - `--name-only`: Show name of changed file
      # - `--pretty=format:` Show nothing but file name
      # - `|`: Pipe result(s) to next command
      # - `grep`: Filter out strings matched provided expression
      # - `-e`: Additional expression, string only needs to match 1 expression to be considered matched
      #
      - name: Detect changes in the past week
        id: detect-changes
        run: |
          echo "changes_made=$(git log --since="1 week ago" --name-only --pretty=format: | grep -e "build\.gradle\.kts$" -e "libs\.versions\.toml$" -e "gradle-wrapper\.properties$" -e "^composeApp/src/androidMain|commonMain/kotlin|java/")" >> $GITHUB_OUTPUT

  build-release:
    needs: check-changes
    if: needs.check-changes.outputs.changes_made != ''

    name: Build release
    runs-on: ubuntu-latest
    timeout-minutes: 60       # Prevent Github Action from terminating this workflow on first run

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          submodules: true

      - name: Set up JDK
        uses: actions/setup-java@v5.0.0
        with:
          # Do NOT add `cache: 'gradle'` here
          distribution: 'corretto'
          java-version: '21'

      - name: Cache Gradle dependencies & build cache
        uses: actions/cache@v4.2.4
        with:
          path: |
            ~/.gradle/caches
            ./build
            ./composeApp/build
          key: gradle-${{ runner.os }}-${{ hashFiles('**/gradle-wrapper.properties', '**/libs.versions.toml') }}
          restore-keys: gradle-${{ runner.os }}-

      - name: Build with Gradle (cache only)
        # Gradle has built-in flag "-build-cache"
        # That explicitly tell compiler to generate reusable files.
        # Combine with "--exclude-task" to skip unnecessary tasks
        run: ./gradlew assembleGithubRelease --build-cache --exclude-task packageGithubRelease
